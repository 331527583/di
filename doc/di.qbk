[/
 /
 / Copyright (c) 2014 Krzysztof Jusiak (krzysztof at jusiak dot net)
 /
 / Distributed under the Boost Software License, Version 1.0.
 / (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /
 /]

[library Boost.DI (Dependency Injection)
    [quickbook 1.6]
    [version 1.0]
    [id di]
    [copyright 2014 Krzysztof Jusiak]
    [authors [Jusiak, Krzysztof]]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [source-mode c++]
]

[caution This is not an official Boost library yet and there is no guarantee it will ever be!]

[def __concepts__                                       [link di.concepts Concepts]]

[def __injections__                                     [link di.concepts.injections Injections]]
[def __injections_automatic__                           [link di.concepts.injections.automatic automatic]]
[def __injections_boost_di_inject__                     [link di.concepts.injections.boost_di_inject BOOST_DI_INJECT]]
[def __injections_boost_di_inject_traits__              [link di.concepts.injections.boost_di_inject_traits BOOST_DI_INJECT_TRAITS]]
[def __injections_ctor_traits__                         [link di.concepts.injections.ctor_traits ctor_traits]]

[def __annotations__                                    [link di.concepts.annotations Annotations]]
[def __annotations_named__                              [link di.concepts.annotations.named named]]

[def __scopes__                                         [link di.concepts.scopes Scopes]]
[def __wrappers__                                       [link di.concepts.scopes.wrapper_model Wrappers]]
[def __scopes_deduce__                                  [link di.concepts.scopes.deduce deduce scope]]
[def __scopes_external__                                [link di.concepts.scopes.external external scope]]
[def __scopes_unique__                                  [link di.concepts.scopes.unique unique scope]]
[def __scopes_shared__                                  [link di.concepts.scopes.shared shared scope]]
[def __scopes_session__                                 [link di.concepts.scopes.session session scope]]

[def __scopes_deduce_scope__                            [link di.concepts.scopes.deduce deduce]]
[def __scopes_external_scope__                          [link di.concepts.scopes.external external]]
[def __scopes_unique_scope__                            [link di.concepts.scopes.unique unique]]
[def __scopes_shared_scope__                            [link di.concepts.scopes.shared shared]]
[def __scopes_session_scope__                           [link di.concepts.scopes.session session]]

[def __bindings__                                       [link di.concepts.bindings Bindings]]
[def __bindings_bind__                                  [link di.concepts.bindings.bind bind]]
[def __bindings_bind_any_of__                           [link di.concepts.bindings.bind.any_of any_of]]
[def __bindings_bind_bind_bool__                        [link di.concepts.bindings.bind.bind_bool bind_bool]]
[def __bindings_bind_bind_int__                         [link di.concepts.bindings.bind.bind_int bind_int]]
[def __bindings_bind_bind_string__                      [link di.concepts.bindings.bind.bind_string bind_string]]
[def __bindings_deduce__                                [link di.concepts.bindings.scope.deduce deduce]]
[def __bindings_scope__                                 [link di.concepts.bindings.scope scope]]
[def __bindings_scope_deduce__                          [link di.concepts.bindings.scope.deduce deduce]]
[def __bindings_scope_unique__                          [link di.concepts.bindings.scope.unique unique]]
[def __bindings_scope_shared__                          [link di.concepts.bindings.scope.shared shared]]
[def __bindings_scope_session__                         [link di.concepts.bindings.scope.session unique]]
[def __bindings_when__                                  [link di.concepts.bindings.when when]]
[def __bindings_when_call_stack__                       [link di.concepts.bindings.when.call_stack call_stack]]
[def __bindings_named__                                 [link di.concepts.bindings.named named]]

[def __core__                                           [link di.concepts.injectors Core]]
[def __injectors__                                      [link di.concepts.injectors Injectors]]
[def __injectors_injector__                             [link di.concepts.injectors.injector injector]]
[def __injectors_make_injector__                        [link di.concepts.injectors.make_injector make_injector]]

[def __modules__                                        [link di.concepts.modules Modules]]

[def __utilities_allocator__                            [link di.concepts.utilities.allocator allocator]]
[def __utilities_provider__                             [link di.concepts.utilities.provider provider]]

[def __policies__                                       [link di.concepts.policies Policies]]
[def __policies_circular_dependencies__                 [link di.concepts.policies.circular_dependencies circular_dependencies]]
[def __policies_creation_ownership__                    [link di.concepts.policies.creation_ownership creation_ownership]]
[def __policies_parameters_permission__                 [link di.concepts.policies.parameters_permission parameters_permission]]
[def __policies_scopes_permission__                     [link di.concepts.policies.scopes_permission scopes_permission]]

[def __rationale__                                      [link di.rationale Rationale]]
[def __rationale_constructor_parameters_deduction__     [link di.rationale.constructor_parameters_deduction Constructor Parameters Deduction]]
[def __rationale_binding_resolution_algorithm__         [link di.rationale.binding_resolution_algorithm Binding Resolution Algorithm]]

[def __examples__                                       [link di.examples Examples]]
[def __examples_hello_world__                           [link di.examples.hello_world Hello World]]
[def __examples_binding__                               [link di.examples.binding Binding]]
[def __examples_dynamic_binding__                       [link di.examples.dynamic_binding Dynamic Binding]]
[def __examples_constructor_injection__                 [link di.examples.constructor_injection Constructor Injection]]
[def __examples_modules__                               [link di.examples.modules Modules]]
[def __examples_custom_allocator__                      [link di.examples.custom_allocator Custom Allocator]]
[def __examples_constructor_traits_generator__          [link di.examples.constructor_traits_generator Constructor Traits Generator]]
[def __examples_custom_policy__                         [link di.examples.custom_policy Custom Policy]]
[def __examples_custom_scope__                          [link di.examples.custom_scope Custom Scope]]
[def __examples_deduce_scope__                          [link di.examples.deduce_scope Deduce Scope]]
[def __examples_uml_visitor__                           [link di.examples.uml_visitor UML Visitor]]
[def __examples_extensions__                            [link di.examples.extensions Extensions]]
[def __examples_testing_automatic_mocks_injector__      [link di.examples.testing.automatic_mocks_injector Automatic Mocks Injector]]

[def __more_examples__                                  [link di.examples.more_examples More Examples]]
[def __more_examples_named__                            [link di.examples.more_examples.named_parameters Named Parameters]]
[def __more_examples_provider__                         [link di.examples.more_examples.provider Provider]]
[def __more_examples_externals__                        [link di.examples.more_examples.externals Externals]]
[def __more_examples_multiple_interfaces__              [link di.examples.more_examples.multiple_interfaces Multiple Interfaces]]
[def __more_examples_text_visitor__                     [link di.examples.more_examples.text_visitor Text Visitor]]

[def __binding_model__                                  [link di.concepts.bindings.synopsis Binding Model]]
[def __dependency_model__                               [link di.concepts.bindings.synopsis Dependency Model]]
[def __scope_model__                                    [link di.concepts.scopes.synopsis Scope Model]]
[def __allocator_model__                                [link di.concepts.utilities.allocator Allocator Model]]
[def __policy_model__                                   [link di.concepts.policies Policy Model]]
[def __visitor_model__                                  [link di.concepts.injectors.injector.visitor_model Visitor Model]]
[def __wrapper_model__                                  [link di.concepts.scopes.wrapper_model Wrapper Model]]
[def __allow_parameter_model__                          [link di.concepts.policies.parameters_permission.allow_parameter_model Allow Parameter Model]]
[def __allow_scope_model__                              [link di.concepts.policies.scopes_permission.allow_scope_model Allow Scope Model]]

[include introduction.qbk]
[include motivation.qbk]
[include overview.qbk]
[include tutorial.qbk]
[include concepts.qbk]
[include examples.qbk]
[include rationale.qbk]
[include changelog.qbk]
[include acknowledgements.qbk]
[include references.qbk]

