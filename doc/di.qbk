[/
 /
 / Copyright (c) 2012-2015 Krzysztof Jusiak (krzysztof at jusiak dot net)
 /
 / Distributed under the Boost Software License, Version 1.0.
 / (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /
 /]

[library Boost.DI / C++14 Dependency Injection Library /
    [quickbook 1.6]
    [version 1.0.0]
    [id di]
    [copyright 2012-2015 Krzysztof Jusiak | Distributed under the Boost Software License, Version 1.0.]
    [authors [Jusiak, Krzysztof]]
    [license
        --- [@https://github.com/krzysztof-jusiak/di GitHub] ---
    ]
    [source-mode c++]
]

[def __di_hpp__                                         [@https://github.com/krzysztof-jusiak/di/blob/cpp14/include/boost/di.hpp boost/di.hpp]]
[def __di_inject_hpp__                                  [@https://github.com/krzysztof-jusiak/di/blob/cpp14/include/boost/di/inject.hpp boost/di/inject.hpp]]

[def __user_guide__                                     [link di.user_guide User Guide]]
[def __injector__                                       [link di.user_guide.injector Injector]]
[def __injector_make_injector__                         [link di.user_guide.injector.make_injector make_injector]]
[def __core__                                           [link di.user_guide.injector Core]]

[def __bindings__                                       [link di.user_guide.bindings Bindings]]
[def __binding_model__                                  [link di.user_guide.bindings.synopsis binding]]
[def __dependency_model__                               [link di.user_guide.bindings.synopsis dependency]]
[def __bindings_bind__                                  [link di.user_guide.bindings.bind bind]]
[def __bindings_any_of__                                [link di.user_guide.bindings.bind bind]]

[def __injections__                                     [link di.user_guide.injections Injections]]
[def __injections_automatic__                           [link di.user_guide.injections.automatic automatic]]
[def __injections_inject__                              [link di.user_guide.injections.inject inject]]
[def __injections_boost_di_inject__                     [link di.user_guide.injections.inject.boost_di_inject BOOST_DI_INJECT]]
[def __injections_boost_di_inject_traits__              [link di.user_guide.injections.inject.boost_di_inject_traits BOOST_DI_INJECT_TRAITS]]
[def __injections_boost_di_inject_traits_no_limits__    [link di.user_guide.injections.inject.boost_di_inject_traits_no_limits BOOST_DI_INJECT_TRAITS_NO_LIMITS]]
[def __injections_ctor_traits__                         [link di.user_guide.injections.ctor_traits ctor_traits]]

[def __annotations__                                    [link di.user_guide.annotations Annotations]]
[def __annotations_named__                              [link di.user_guide.annotations.named named]]

[def __scopes__                                         [link di.user_guide.scopes Scopes]]
[def __wrappers__                                       [link di.user_guide.scopes.wrapper_model Wrappers]]
[def __wrapper_model__                                  [link di.user_guide.scopes.wrapper_model wrapper]]
[def __scope_model__                                    [link di.user_guide.scopes.synopsis scope]]
[def __scopes_deduce__                                  [link di.user_guide.scopes.deduce deduce scope]]
[def __scopes_external__                                [link di.user_guide.scopes.external external scope]]
[def __scopes_unique__                                  [link di.user_guide.scopes.unique unique scope]]
[def __scopes_shared__                                  [link di.user_guide.scopes.shared shared scope]]
[def __scopes_singleton__                               [link di.user_guide.scopes.singleton singleton scope]]
[def __scopes_session__                                 [link di.user_guide.scopes.session session scope]]

[def __concepts_boundable__                             [link di.user_guide.concepts.boundable boundable]]
[def __concepts_callable__                              [link di.user_guide.concepts.callable callable]]
[def __concepts_configurable__                          [link di.user_guide.concepts.configurable configurable]]
[def __concepts_creatable__                             [link di.user_guide.concepts.creatable creatable]]
[def __concepts_providable__                            [link di.user_guide.concepts.providable providable]]
[def __concepts_scopable__                              [link di.user_guide.concepts.scopable scopable]]

[def __modules__                                        [link di.user_guide.modules Modules]]

[def __policies__                                       [link di.user_guide.policies Policies]]
[def __policy_model__                                   [link di.user_guide.policies policy]]
[def __policies_constructible__                         [link di.user_guide.policies.constructible constructible]]

[def __providers__                                      [link di.user_guide.providers Providers]]
[def __provider_model__                                 [link di.user_guide.providers.synopsis provider]]
[def __providers_heap__                                 [link di.user_guide.providers.heap heap]]
[def __providers_stack_over_heap__                      [link di.user_guide.providers.heap stack_over_heap]]

[def __di_config__                                      [link di.user_guide.configuration.synopsis di::config]]
[def __di_make_policies__                               [link di.user_guide.configuration.synopsis di::make_policies]]

[def __performance__                                    [link di.performance Performance]]
[def __diagnostic_messages__                            [link di.diagnostic_messages Diagnostic messages]]

[def __examples__                                       [link di.examples Examples]]
[def __examples_hello_world__                           [link di.examples.hello_world Hello World]]
[def __examples_bindings__                              [link di.examples.bindings Bindings]]
[def __examples_dynamic_bindings__                      [link di.examples.dynamic_bindings Dynamic Bindings]]
[def __examples_constructor_injection__                 [link di.examples.constructor_injection Constructor Injection]]
[def __examples_constructor_signature__                 [link di.examples.constructor_signature Constructor Signature]]
[def __examples_modules__                               [link di.examples.modules Modules]]
[def __examples_custom_provider__                       [link di.examples.custom_provider Custom Provider]]
[def __examples_custom_policy__                         [link di.examples.custom_policy Custom Policy]]
[def __examples_custom_scope__                          [link di.examples.custom_scope Custom Scope]]
[def __examples_deduce_scope__                          [link di.examples.deduce_scope Deduce Scope]]
[def __examples_uml_dumper__                            [link di.examples.uml_dumper UML Dumper]]
[def __examples_annotations__                           [link di.examples.annotations Annotations]]
[def __examples_provider__                              [link di.examples.provider Provider]]
[def __examples_externals__                             [link di.examples.externals Externals]]
[def __examples_multiple_interfaces__                   [link di.examples.multiple_interfaces Multiple Interfaces]]
[def __examples_types_dumper__                          [link di.examples.types_dumper Types Dumper]]
[def __examples_modules_hpp_cpp__                       [link di.examples.modules_hpp_cpp Modules (hpp/cpp)]]

[def __extensions__                                     [link di.examples Extensions]]

[def __rationale__                                      [link di.rationale Rationale]]

[def __di_bind__                                        [link di.user_guide.bindings.bind di::bind]]
[def __di_injector__                                    [link di.user_guide.injector di::injector]]
[def __di_injector_create__                             [link di.user_guide.injector.synopsis create]]
[def __di_make_injector__                               [link di.user_guide.injector.make_injector di::make_injector]]
[def __di_scopes_deduce__                               [link di.user_guide.scopes.deduce di::deduce]]
[def __di_scopes_unique__                               [link di.user_guide.scopes.unique di::unique]]
[def __di_scopes_shared__                               [link di.user_guide.scopes.shared di::shared]]
[def __di_scopes_session__                              [link di.user_guide.scopes.session di::session]]
[def __di_scopes_singleton__                            [link di.user_guide.scopes.singleton di::singleton]]
[def __di_scopes_external__                             [link di.user_guide.scopes.external di::external]]
[def __di_dependency__                                  [link di.user_guide.bindings.synopsis di::dependency]]

[include introduction.qbk]
[include overview.qbk]
[include tutorial.qbk]
[include quick_user_guide.qbk]
[include user_guide.qbk]
[include examples.qbk]
[include extensions.qbk]
[include projects.qbk]
[include rationale.qbk]
[include changelog.qbk]
[include acknowledgements.qbk]
[include references.qbk]

