@startuml di.png

dependency --> explicit_value
dependency --> instance
dependency --> converter

fusion_module <|-- module
generic_module <|-- module
injector <|-- module

class module {
    create()
    visit()
    call()
}

module --> visitor
visitor --> ctor_traits
module --> creator
creator --> ctor_traits
module --> pool
module --> binder

package "concepts" {
    dependency <|-- annotate
    dependency <|-- bind
    dependency <|-- call_stack
    dependency <|-- externals
    dependency <|-- scope
    externals --> instance
}

package "scopes" {
    per_request --> dependency
    singleton --> dependency
}

package "policies" {
    policy --> check_for_binding_correctness
    policy --> check_for_circular_dependencies
    policy --> check_for_creation_ownership
    policy --> check_for_references_without_ownership

    policy --> module
}

package "utility" {
    class named
    class provider {
        get()
    }
}

@enduml

