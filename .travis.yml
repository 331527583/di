#
# Copyright (c) 2012-2015 Krzysztof Jusiak (krzysztof at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
language: c++
sudo: required
env:
  global:
    - secure: "A27gNApbElRr3fqZXifVPKkB+xbxMYDFINGk2RDqul1X1Zg51M7e+ohHO9BwhEYiOGmCnFfbsVUP11XyFIH6kzWmxw9mhy8YDglbYfeyu6grxtU3mHElz8W7wO5OCPFPWXQf23sVYE8AWyjj6M+t3oyLJhPXCcYI7uMHEQm10CQ="

  matrix:
    - DOCUMENTATION=1 BOOST=boost_1_58_0

matrix:
  include:
    - os: linux
      env: TOOLSET=clang-3.4 VALGRIND=1
      addons: &clang34
        apt:
          packages:
            - clang-3.4
            - libstdc++-5-dev
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.4

    - os: linux
      env: TOOLSET=clang-3.5 VALGRIND=1
      addons: &clang35
        apt:
          packages:
            - clang-3.5
            - libstdc++-5-dev
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5

    - os: linux
      env: TOOLSET=clang-3.6 VALGRIND=1
      addons: &clang36
        apt:
          packages:
            - clang-3.6
            - libstdc++-5-dev
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

    - os: linux
      env: TOOLSET=clang-3.7 VALGRIND=1
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - libstdc++-5-dev
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise

    - os: linux
      env: TOOLSET=clang++-3.7 VARIANT=analyze
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - libstdc++-5-dev
            - compiler-rt
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise

    - os: linux
      env: CMAKE_COMPILER=clang++-3.7
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise

    - os: linux
      env: TOOLSET=gcc-5 GCOV=gcov-5 VARIANT=coverage VALGRIND=1
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
            - valgrind
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: TOOLSET=gcc-5 VARIANT=analyze
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      env: CMAKE_COMPILER=g++-5
      addons: &gcc5
        apt:
          packages:
            - g++-5
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test

    - os: osx
      env: TOOLSET=clang

    - os: osx
      env: CMAKE_COMPILER=clang++

before_script:
  - git config --global user.name "Travis-CI"
  - git config --global user.email "travis@ci.net"
  - git config --global push.default simple
  - (cd build && ./bootstrap.sh)

script:
  - if [ "${TOOLSET}" != "" ]; then (cd test && ../build/b2 -sBOOST_ROOT=../build -j2 -q --toolset=${TOOLSET} debug-symbols=off ${VARIANT}); fi
  - if [ "${TOOLSET}" != "" ]; then (cd example && ../build/b2 -sBOOST_ROOT=../build -j2 -q --toolset=${TOOLSET} debug-symbols=off); fi
  - if [ "${CMAKE_COMPILER}" != "" ]; then (cd build && CXX=${CMAKE_COMPILER} cmake .. && make -j2 all && make test); fi
  - if [ "${VALGRIND}" != "" ]; then (find .. -type f -executable | grep "\.test" | xargs -i% valgrind --error-exitcode=-1 %); fi
  - if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${DOCUMENTATION}" != "" ]; then (travis_wait travis_retry wget --quiet http://sourceforge.net/projects/boost/files/boost/1.58.0/${BOOST}.tar.gz && tar zxf ${BOOST}.tar.gz && mkdir ${BOOST}/libs/di && cp -r example build doc ${BOOST}/libs/di && sudo apt-get install xsltproc && cd ${BOOST}/libs/di/doc && ../build/b2 -sBOOST_ROOT=../build && git clone https://github.com/krzysztof-jusiak/di.git && cd di && git checkout -b gh-pages --track origin/gh-pages && git reset --hard && rm -rf boost/libs/di/doc/html cpp14/boost/libs/di/doc/html && cp -r ../html boost/libs/di/doc && cp -r ../html cpp14/boost/libs/di/doc && git add -A . && git commit -am "doc regeneration" && git push --force --quiet "https://${GH_TOKEN}@github.com/krzysztof-jusiak/di"); fi

after_success:
  - if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${VARIANT}" == "coverage" ]; then (sudo pip install requests[security] cpp-coveralls && coveralls -r . -b test/ --gcov /usr/bin/${GCOV} --repo-token c3V44Hj0ZTKzz4kaa3gIlVjInFiyNRZ4f); fi

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/743f46341bea58bbe3ca
  on_success: change
  on_failure: always
  on_start: false

