#
# Copyright (c) 2012-2015 Krzysztof Jusiak (krzysztof at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
language: c++
sudo: false
env:
  global:
  - secure: "A27gNApbElRr3fqZXifVPKkB+xbxMYDFINGk2RDqul1X1Zg51M7e+ohHO9BwhEYiOGmCnFfbsVUP11XyFIH6kzWmxw9mhy8YDglbYfeyu6grxtU3mHElz8W7wO5OCPFPWXQf23sVYE8AWyjj6M+t3oyLJhPXCcYI7uMHEQm10CQ="
  - secure: "S1svDigJfTlkxkkp14OOiWje6nT1j06k3cAAvbnI6lNGbf1VxQlJ/Q5SAxEV8ITYvDnJGy/yaoT/tipa5pgFVJ2qpAx/zo8oWGfDAyBSk8LWzuocU5rShvq3eJDJW4199RSdGalXtS1C+7hohJNSy9QP4iODvQA5j90+fbCPdh0="
  - BII_USER=krzysztofjusiak
  - VALGRIND=--memcheck="valgrind --leak-check=full --error-exitcode=1"

matrix:
  fast_finish: true
  include:
  - os: linux
    env: DOCUMENTATION=ON
    addons:
      apt:
        packages:
        - xsltproc
  - os: linux
    env: TOOLSET=clang-3.4 MEMCHECK=${VALGRIND} BENCHMARK=quick
    addons:
      apt:
        packages:
        - clang-3.4
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.4
  - os: linux
    env: TOOLSET=clang-3.5 MEMCHECK=${VALGRIND} BENCHMARK=quick
    addons:
      apt:
        packages:
        - clang-3.5
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.5
  - os: linux
    env: TOOLSET=clang-3.6 MEMCHECK=${VALGRIND} BENCHMARK=quick
    addons:
      apt:
        packages:
        - clang-3.6
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
  - os: linux
    env: TOOLSET=clang-3.6 MEMCHECK=${VALGRIND} LIBCXX=clang++-3.6
    addons:
      apt:
        packages:
        - clang-3.6
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
  #- os: linux
    #env: TOOLSET=clang-3.7 MEMCHECK=${VALGRIND} BENCHMARK=quick
    #addons:
      #apt:
        #packages:
        #- clang-3.7
        #- libstdc++-5-dev
        #- valgrind
        #- gdb
        #- bc
        #sources:
        #- ubuntu-toolchain-r-test
        #- llvm-toolchain-precise
  #- os: linux
    #env: CMAKE_COMPILER=clang++-3.7 BENCHMARK=quick
    #addons:
      #apt:
        #packages:
        #- clang-3.7
        #- libstdc++-5-dev
        #- gdb
        #- bc
        #sources:
        #- ubuntu-toolchain-r-test
        #- llvm-toolchain-precise
  - os: linux
    env: TOOLSET=gcc-5 GCOV=gcov-5 VARIANT=coverage MEMCHECK=${VALGRIND} BIICODE=ON
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - valgrind
        - gdb
        sources:
        - ubuntu-toolchain-r-test
  - os: linux
    env: TOOLSET=gcc-5 VARIANT=analyze
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - gdb
        sources:
        - ubuntu-toolchain-r-test
  - os: linux
    env: CMAKE_COMPILER=g++-5 BENCHMARK=quick
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
  - os: osx
    env: TOOLSET=clang BENCHMARK=quick
  - os: osx
    env: CMAKE_COMPILER=clang++ BENCHMARK=quick

before_script:
- git config --global user.name "Travis-CI"
- git config --global user.email "travis@ci.net"
- git config --global push.default simple
- (cd build && ./bootstrap.sh)

install:
- if [ "${LIBCXX}" != "" ]; then (export CXX=${LIBCXX} &&
  svn --quiet co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx &&
  mkdir libcxx/build && cd libcxx/build && cmake .. -DLIBCXX_CXX_ABI=libstdc++
  -DLIBCXX_CXX_ABI_INCLUDE_PATHS="/usr/include/c++/4.6;/usr/include/c++/4.6/x86_64-linux-gnu" && make cxx -j2) &&
  export CXXFLAGS="-stdlib=libc++ -I${TRAVIS_BUILD_DIR}/libcxx/build/include/c++/v1/"
  export BJAM_CXXFLAGS=cxxflags="$CXXFLAGS" &&
  export LDFLAGS="-L${TRAVIS_BUILD_DIR}/libcxx/build/lib/ -lc++" &&
  export BJAM_LDFLAGS=linkflags="-L${TRAVIS_BUILD_DIR}/libcxx/build/lib/ -lc++" &&
  export LD_LIBRARY_PATH="${TRAVIS_BUILD_DIR}/libcxx/build/lib/:$LD_LIBRARY_PATH"; fi

script:
- if [ "${TOOLSET}" != "" ]; then (cd test && ../build/b2 -sBOOST_ROOT=../build -j2
  -q --toolset=${TOOLSET} debug-symbols=off ${VARIANT} ${MEMCHECK} $BJAM_CXXFLAGS $BJAM_LDFLAGS); fi
- if [ "${TOOLSET}" != "" ]; then (cd example && ../build/b2 -sBOOST_ROOT=../build
  -j2 -q --toolset=${TOOLSET} debug-symbols=off ${MEMCHECK} $BJAM_CXXFLAGS $BJAM_LDFLAGS); fi
- if [ "${CMAKE_COMPILER}" != "" ]; then (cd build && CXX=${CMAKE_COMPILER} cmake
  .. && cmake --build . && ctest --output-on-failure); fi
- if [ "${TOOLSET}" != "" ] && [ "${BENCHMARK}" != "" ]; then (cd test/pt && CXX=${TOOLSET}
  COMPLEXITY=${BENCHMARK} ./di_compile_time.sh); fi
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${DOCUMENTATION}" != "" ]; then (git
  clone --quiet --recursive --depth=1 --single-branch https://github.com/boostorg/boost.git
  && cd boost && ./bootstrap.sh && ./b2 headers && mkdir libs/di && cp -r ../build ../doc ../example ../include libs/di
  && cd libs/di/doc && ../build/b2 -sBOOST_ROOT=../build && git clone https://github.com/krzysztof-jusiak/di.git
  && cd di && git checkout -b gh-pages --track origin/gh-pages && git reset --hard
  && rm -rf cpp14/boost/libs/di/doc/html && cp -r ../html cpp14/boost/libs/di/doc
  && git add -A . && git commit -am "update" && git push --force --quiet
  "https://${GH_TOKEN}@github.com/krzysztof-jusiak/di"); fi

after_success:
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${VARIANT}" == "coverage" ]; then (pip
  install --user travis requests[security] cpp-coveralls && coveralls -r . -b test/ --gcov /usr/bin/${GCOV}
  --repo-token c3V44Hj0ZTKzz4kaa3gIlVjInFiyNRZ4f); fi
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${BIICODE}" != "" ]; then (mkdir biicode && cd biicode
  && wget https://s3.amazonaws.com/biibinaries/release/3.3/bii-ubuntu-64_3_3.deb
  && dpkg -x bii-ubuntu-64_3_3.deb . && export PATH=$PWD/opt/biicode:$PATH && bii init di
  && cd di && bii new krzysztofjusiak/di && cd blocks/krzysztofjusiak/di
  && git clone https://github.com/krzysztof-jusiak/di.git .
  && bii user "${BII_USER}" -p "${BII_PASSWORD}" && bii publish -r); fi

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/743f46341bea58bbe3ca
  on_success: change
  on_failure: always
  on_start: false

