#
# Copyright (c) 2012-2015 Krzysztof Jusiak (krzysztof at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

import testing ;
import feature : extend-feature compose ;

.argv = [ modules.peek : ARGV ] ;

project di :
    requirements
        <include>../include
        <include>.
;

rule example ( src + : cxxflags * : property * ) {
    cxx_flags = "" ;
    if $(cxxflags) {
        cxx_flags = "$(cxxflags)" ;
    }

    toolset =
        <toolset>gcc:<cxxflags>"-std=c++1y -Wall -Wextra -Werror $(cxx_flags)"
        <toolset>gcc-6.0.0:<cxxflags>"-std=c++1z"
        <toolset>clang:<cxxflags>"-std=c++1y -Wno-dollar-in-identifier-extension -pedantic -pedantic-errors -Wall -Wextra -Werror $(cxx_flags)"
        <toolset>darwin:<cxxflags>"-std=c++1y -pedantic -pedantic-errors -Wall -Wextra -Werror $(cxx_flags)"
        <toolset>msvc:<cxxflags>"/W3 $(cxx_flags)"
    ;

    local memcheck = [ MATCH --memcheck=(.*) : $(.argv) ] ;

    if ${memcheck} {
        toolset += <testing.launcher>$(memcheck) ;
    }

    run $(src) : : : $(toolset) : $(property) ;
}

test-suite example :
    [ example modules/model.cpp
              modules/module_model.cpp
              modules/view.cpp
              modules/module_view.cpp
              modules/controller.cpp
              modules/main.cpp
      : -Imodules -DBOOST_DI_CFG=config
    ]
    [ example annotations.cpp : -Wno-gnu-string-literal-operator-template ]
    [ example automatic_injection.cpp ]
    [ example bindings.cpp ]
    [ example constructor_injection.cpp ]
    [ example constructor_signature.cpp ]
    [ example custom_policy.cpp ]
    [ example custom_provider.cpp ]
    [ example custom_scope.cpp ]
    [ example deduce_scope.cpp ]
    [ example dynamic_bindings.cpp ]
    [ example fwd_bindings.cpp ]
    [ example hello_world.cpp ]
    [ example modules.cpp ]
    [ example multiple_bindings.cpp ]
    [ example multiple_interfaces.cpp ]
    [ example pool_provider.cpp ]
    [ example provider.cpp ]
;

test-suite extensions :
    [ example extensions/bindings/constructor_bindings.cpp ]
    [ example extensions/injections/assisted_injection.cpp ]
    [ example extensions/injections/named_parameters.cpp : -Wno-attributes -Wno-gnu-string-literal-operator-template ]
    [ example extensions/injections/xml_injection.cpp ]
    [ example extensions/policies/types_dumper.cpp ]
    [ example extensions/policies/uml_dumper.cpp ]
    [ example extensions/providers/mocks_provider.cpp ]
    [ example extensions/scopes/session_scope.cpp ]
    [ example extensions/scopes/shared_scope.cpp ]
;

test-suite introduction :
    [ example introduction/coffee_maker.cpp ]
;

test-suite performance :
    [ example performance/create_bound_interface.cpp ]
    [ example performance/create_bound_interface_via_exposed_module.cpp ]
    [ example performance/create_bound_interface_via_module.cpp ]
    [ example performance/create_named_type.cpp ]
    [ example performance/create_type_with_bound_instance.cpp ]
    [ example performance/create_type_without_bindings.cpp ]
;

test-suite quick_user_guide :
    [ example quick_user_guide/annotations1.cpp ]
    [ example quick_user_guide/annotations2.cpp ]
    [ example quick_user_guide/annotations3.cpp ]
    [ example quick_user_guide/annotations4.cpp ]
    [ example quick_user_guide/bindings1.cpp ]
    [ example quick_user_guide/bindings2.cpp ]
    [ example quick_user_guide/bindings3.cpp ]
    [ example quick_user_guide/bindings4.cpp ]
    [ example quick_user_guide/bindings5.cpp ]
    [ example quick_user_guide/injections1.cpp ]
    [ example quick_user_guide/injections2.cpp ]
    [ example quick_user_guide/injections3.cpp ]
    [ example quick_user_guide/injections4.cpp ]
    [ example quick_user_guide/injections5.cpp ]
    [ example quick_user_guide/injections6.cpp ]
    [ example quick_user_guide/injector1.cpp ]
    [ example quick_user_guide/modules1.cpp ]
    [ example quick_user_guide/modules2.cpp ]
    [ example quick_user_guide/modules3.cpp ]
    [ example quick_user_guide/modules4.cpp ]
    [ example quick_user_guide/policies1.cpp ]
    [ example quick_user_guide/policies2.cpp ]
    [ example quick_user_guide/policies3.cpp ]
    [ example quick_user_guide/providers1.cpp ]
    [ example quick_user_guide/scopes1.cpp ]
    [ example quick_user_guide/scopes2.cpp ]
    [ example quick_user_guide/scopes3.cpp ]
    [ example quick_user_guide/scopes4.cpp ]
    [ example quick_user_guide/scopes5.cpp ]
;

test-suite try_it_online :
    [ example try_it_online/main.cpp : -I../include/boost ]
;

test-suite tutorial :
    [ example tutorial/tutorial1.cpp : -Itutorial ]
    [ example tutorial/tutorial2.cpp : -Itutorial ]
    [ example tutorial/tutorial3.cpp : -Itutorial ]
    [ example tutorial/tutorial4.cpp : -Itutorial ]
    [ example tutorial/tutorial5.cpp : -Itutorial ]
    [ example tutorial/tutorial6.cpp : -Itutorial ]
    [ example tutorial/tutorial7.cpp : -Itutorial ]
;

