cmake_minimum_required(VERSION 2.6)
project(Boost.DI CXX)

if("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -pedantic -pedantic-errors -Wall -Wextra -Werror -include test.hpp")
elseif(CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -pedantic -pedantic-errors -Wall -Wextra -Werror -include test.hpp")
endif()

include(CTest)
enable_testing()
include_directories(include)
include_directories(test)
include_directories(test/common)

add_executable(ut.inject test/ut/inject.cpp)
add_test(ut.inject ut.inject)
add_executable(ut.aux_.preprocessor test/ut/aux_/preprocessor.cpp)
add_test(ut.aux_.preprocessor ut.aux_.preprocessor)
add_executable(ut.aux_.type_traits test/ut/aux_/type_traits.cpp)
add_test(ut.aux_.type_traits ut.aux_.type_traits)
add_executable(ut.aux_.utility test/ut/aux_/utility.cpp)
add_test(ut.aux_.utility ut.aux_.utility)
#add_executable(ut.concepts.boundable test/ut/concepts/boundable.cpp)
#add_test(ut.concepts.boundable ut.concepts.boundable)
#add_executable(ut.concepts.callable test/ut/concepts/callable.cpp)
#add_test(ut/concepts/callable test/ut/concepts/callable)
#add_executable(ut.concepts.configurable test/ut/concepts/configurable.cpp)
#add_test(ut.concepts.configurable ut.concepts.configurable)
#add_executable(ut.concepts.creatable test/ut/concepts/creatable.cpp)
#add_test(ut.concepts.creatable ut.concepts.creatable)
add_executable(ut.core.any_type test/ut/core/any_type.cpp)
add_test(ut.core.any_type ut.core.any_type)
add_executable(ut.core.binder test/ut/core/binder.cpp)
add_test(ut.core.binder ut.core.binder)
add_executable(ut.core.dependency test/ut/core/dependency.cpp)
add_test(ut.core.dependency ut.core.dependency)
add_executable(ut.core.injector test/ut/core/injector.cpp)
add_test(ut.core.injector ut.core.injector)
add_executable(ut.core.policy test/ut/core/policy.cpp)
add_test(ut.core.policy ut.core.policy)
add_executable(ut.core.pool test/ut/core/pool.cpp)
add_test(ut.core.pool ut.core.pool)
add_executable(ut.core.provider test/ut/core/provider.cpp)
add_test(ut.core.provider ut.core.provider)
add_executable(ut.policies.constructible test/ut/policies/constructible.cpp)
add_test(ut.policies.constructible ut.policies.constructible)
add_executable(ut.providers.heap test/ut/providers/heap.cpp)
add_test(ut.providers.heap ut.providers.heap)
add_executable(ut.providers.stack_over_heap test/ut/providers/stack_over_heap.cpp)
add_test(ut.providers.stack_over_heap ut.providers.stack_over_heap)
add_executable(ut.scopes.deduce test/ut/scopes/deduce.cpp)
add_test(ut.scopes.deduce ut.scopes.deduce)
add_executable(ut.scopes.exposed test/ut/scopes/exposed.cpp)
add_test(ut.scopes.exposed ut.scopes.exposed)
add_executable(ut.scopes.external test/ut/scopes/external.cpp)
add_test(ut.scopes.external ut.scopes.external)
add_executable(ut.scopes.session test/ut/scopes/session.cpp)
add_test(ut.scopes.session ut.scopes.session)
add_executable(ut.scopes.shared test/ut/scopes/shared.cpp)
add_test(ut.scopes.shared ut.scopes.shared)
add_executable(ut.scopes.singleton test/ut/scopes/singleton.cpp)
add_test(ut.scopes.singleton ut.scopes.singleton)
add_executable(ut.scopes.unique test/ut/scopes/unique.cpp)
add_test(ut.scopes.unique ut.scopes.unique)
add_executable(ut.type_traits.ctor_traits test/ut/type_traits/ctor_traits.cpp)
add_test(ut.type_traits.ctor_traits ut.type_traits.ctor_traits)
add_executable(ut.type_traits.scope_traits test/ut/type_traits/scope_traits.cpp)
add_test(ut.type_traits.scope_traits ut.type_traits.scope_traits)
add_executable(ut.type_traits.memory_traits test/ut/type_traits/memory_traits.cpp)
add_test(ut.type_traits.memory_traits ut.type_traits.memory_traits)
add_executable(ut.wrappers.unique test/ut/wrappers/unique.cpp)
add_test(ut.wrappers.unique ut.wrappers.unique)
add_executable(ut.wrappers.shared test/ut/wrappers/shared.cpp)
add_test(ut.wrappers.shared ut.wrappers.shared)
add_executable(ut.bindings test/ut/bindings.cpp)
add_test(ut.bindings ut.bindings)
add_executable(ut.config test/ut/config.cpp)
add_test(ut.config ut.config)
add_executable(ut.injector test/ut/injector.cpp)
add_test(ut.injector ut.injector)
add_executable(ut.make_injector test/ut/make_injector.cpp)
add_test(ut.make_injector ut.make_injector)

add_executable(ft.bind test/ft/bind.cpp)
add_test(ft.bind ft.bind)
add_executable(ft.bind_any_of test/ft/bind_any_of.cpp)
add_test(ft.bind_any_of ft.bind_any_of)
add_executable(ft.di test/ft/di.cpp)
add_test(ft.di ft.di)
add_executable(ft.utility_named test/ft/utility_named.cpp)
add_test(ft.utility_named ft.utility_named)
add_executable(ft.modules test/ft/modules.cpp)
add_test(ft.modules ft.modules)
add_executable(ft.scope_exposed test/ft/scope_exposed.cpp)
add_test(ft.scope_exposed ft.scope_exposed)
add_executable(ft.scope_external test/ft/scope_external.cpp)
add_test(ft.scope_external ft.scope_external)
add_executable(ft.scope_session test/ft/scope_session.cpp)
add_test(ft.scope_session ft.scope_session)
add_executable(ft.inject_ctor_limit_size test/ft/inject_ctor_limit_size.cpp)
add_test(ft.inject_ctor_limit_size ft.inject_ctor_limit_size)
add_executable(ft.ctor_limit_size test/ft/ctor_limit_size.cpp)
add_test(ft.ctor_limit_size ft.ctor_limit_size)
add_executable(ft.custom_policies test/ft/custom_policies.cpp)
add_test(ft.custom_policies ft.custom_policies)
add_executable(ft.custom_provider test/ft/custom_provider.cpp)
add_test(ft.custom_provider ft.custom_provider)

#add_executable(msvc.msvc2015 test/msvc/msvc2015.cpp)
#add_test(msvc.msvc2015 msvc.msvc2015)

