#
# Copyright (c) 2012 Krzysztof Jusiak (krzysztof at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

import testing ;

project
    : requirements
      <library>/boost/test//boost_unit_test_framework/<link>static
      <warnings>all
      <warnings-as-errors>on
      <define>DDI_FUNCTION_ARITY_LIMIT_SIZE=4
      <define>BOOST_TEST_MODULE=di_test
      <include>../../..
      <include>.
    ;

test-suite di-test
    : [ run aux_/convertible_ut.cpp ]
      [ run aux_/dependency_ut.cpp ]
      [ run aux_/explicit_value_ut.cpp ]
      [ run aux_/make_plain_ut.cpp ]
      [ compile-fail aux_/module_externals_mt_fail.cpp ]
      [ compile-fail aux_/module_policy_mt_fail.cpp ]
      [ run aux_/value_type_ut.cpp ]
      [ run detail/binder_ut.cpp ]
      [ run detail/creator_ut.cpp ]
      [ run detail/module_mt.cpp ]
      [ run detail/pool_ut.cpp ]
      [ run detail/visitor_ut.cpp ]
      [ run policies/check_for_binding_correctness_ut.cpp ]
      [ compile-fail policies/check_for_binding_correctness_mt_fail.cpp ]
      [ run policies/check_for_creation_ownership_ut.cpp ]
      [ compile-fail policies/check_for_creation_ownership_mt_fail.cpp ]
      [ run policies/check_for_circular_dependencies_ut.cpp ]
      [ compile-fail policies/check_for_circular_dependencies_mt_fail.cpp ]
      [ run scopes/per_request_ut.cpp ]
      [ run scopes/singleton_ut.cpp ]
      [ run ctor_bracket_ut.cpp ]
      [ run ctor_va_args_ut.cpp ]
      [ run fusion_module_ut.cpp ]
      [ run generic_module_ut.cpp ]
      [ run injector_mt.cpp ]
      [ compile-fail injector_policy_mt_fail.cpp ]
      [ compile-fail injector_binding_mt_fail.cpp ]
      [ run named_ut.cpp ]
    ;

